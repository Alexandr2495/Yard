#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ –∫–∞–Ω–∞–ª–µ
"""
import os
import asyncio
from dotenv import load_dotenv
from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest, TelegramAPIError

load_dotenv()

async def test_message_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ –∫–∞–Ω–∞–ª–µ"""
    token = os.getenv("TG_TOKEN_RETAIL")
    channel_id = int(os.getenv("CHANNEL_ID_STORE", "0") or "0")
    
    if not token or not channel_id:
        print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ç–æ–∫–µ–Ω –∏–ª–∏ ID –∫–∞–Ω–∞–ª–∞")
        return
    
    bot = Bot(token)
    try:
        print(f"ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É {channel_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        try:
            chat = await bot.get_chat(channel_id)
            print(f"‚úÖ –ö–∞–Ω–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω: {chat.title}")
            print(f"   –¢–∏–ø: {chat.type}")
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ: {e}")
            return
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
        test_message_ids = [1, 2, 3, 4, 5, 10, 20, 50, 100]
        
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º...")
        accessible_messages = []
        
        for msg_id in test_message_ids:
            try:
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                message = await bot.get_chat_member(channel_id, bot.id)
                print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id}: –¥–æ—Å—Ç—É–ø–Ω–æ")
                accessible_messages.append(msg_id)
            except TelegramBadRequest as e:
                if "message not found" in str(e).lower():
                    print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                elif "chat not found" in str(e).lower():
                    print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id}: —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id}: {e}")
            except Exception as e:
                print(f"   ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id}: {e}")
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"   –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(accessible_messages)}")
        print(f"   ID –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {accessible_messages}")
        
        if accessible_messages:
            print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print(f"   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π: {accessible_messages}")
            print(f"   - –û–±–Ω–æ–≤–∏—Ç–µ monitored_posts —Å —ç—Ç–∏–º–∏ ID")
        else:
            print(f"\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:")
            print(f"   - –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
            print(f"   - –í–æ–∑–º–æ–∂–Ω–æ, –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤")
            print(f"   - –ù—É–∂–Ω–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(test_message_access())
